/*------------------------------------*\
    #LAYOUT
\*------------------------------------*/

/**
 * Based on the inuitcss layout system, this approach uses `box-sizing: border-box;`
 * and `display: inline-block;` to create an extremely powerful, flexible
 * alternative to the traditional grid system. Combine the layout items with either
 * the placeholder width extends or the the widths found in `trumps.widths`.
 *
 * Source: https://github.com/inuitcss/objects.layout
 */

// Predefine the variables below in order to alter and enable specific features.
$axe-layout-gutter:           $base-spacing-unit !default;
$axe-layout-gutter--small:    halve( $axe-layout-gutter ) !default;
$axe-layout-gutter--large:    double( $axe-layout-gutter ) !default;

$axe-enable-layout--small:    false !default;
$axe-enable-layout--large:    false !default;
$axe-enable-layout--flush:    false !default;
$axe-enable-layout--rev:      false !default;
$axe-enable-layout--middle:   false !default;
$axe-enable-layout--bottom:   false !default;
$axe-enable-layout--right:    false !default;
$axe-enable-layout--center:   false !default;


/**
 * Begin a layout group.
 */
.layout,
%layout {
    margin:  0;
    padding: 0;
    @include rem((
        margin-left: -( $axe-layout-gutter )
    ));

    list-style: none;
}

/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Full-width unless told to behave otherwise.
 * 4. Align columns to the tops of each other.
 */
.layout__item,
%layout__item {
    display: inline-block; /* [1] */
    @include rem((
        padding-left: $axe-layout-gutter /* [2] */
    ));
    width: 100%; /* [4] */
    vertical-align: top; /* [3] */
}


@if ( $axe-enable-layout--small == true ) {

    /**
     * Layouts with small gutters.
     */
    .layout--small,
    %layout--small {
        @include rem((
            margin-left: -( $axe-layout-gutter--small )
        ));

        > .layout__item,
        > %layout__item {
            @include rem((
                padding-left: $axe-layout-gutter--small
            ));
        }
    }

}


@if ( $axe-enable-layout--large == true ) {

    /**
     * Layouts with large gutters.
     */
    .layout--large,
    %layout--large {
        @include rem((
            margin-left: -( $axe-layout-gutter--large )
        ));

        > .layout__item,
        > %layout__item {
            @include rem((
                padding-left: $axe-layout-gutter--large
            ));
        }
    }

}


@if ( $axe-enable-layout--flush == true ) {

    /**
     * Layouts with no gutters.
     */
    .layout--flush,
    %layout--flush {
        margin-left: 0;

        > .layout__item,
        > %layout__item {
            padding-left: 0;
        }
    }

}


@if ( $axe-enable-layout--rev == true ) {

    /**
     * Reversed rendered order of layout items, e.g. items 1, 2, 3, 4 in your
     * markup will display in order 4, 3, 2, 1 on your page.
     */
    .layout--rev,
    %layout--rev {
        direction: rtl;
        text-align: left;

        > .layout__item,
        > %layout__item {
            direction: ltr;
            text-align: left;
        }
    }

}


@if ( $axe-enable-layout--middle == true ) {

    /**
     * Align layout items to the vertical centers of each other.
     */

    .layout--middle,
    %layout--middle {

        > .layout__item,
        > %layout__item {
            vertical-align: middle;
        }
    }

}


@if ( $axe-enable-layout--bottom == true ) {

    /**
     * Align layout items to the vertical bottoms of each other.
     */
    .layout--bottom,
    %layout--bottom {

        > .layout__item,
        > %layout__item {
            vertical-align: bottom;
        }
    }

}


@if ( $axe-enable-layout--right == true ) {

    /**
     * Make the layout items fill up from the right hand side.
     */
    .layout--right,
    %layout--right {
        text-align: right;

        > .layout__item,
        > %layout__item {
            text-align: left;
        }
    }

}

@if ( $axe-enable-layout--center == true ) {

    /**
     * Make the layout items fill up from the center outward.
     */
    .layout--center,
    %layout--center {
        text-align: center;

        > .layout__item,
        > %layout__item {
            text-align: left;
        }
    }

}
