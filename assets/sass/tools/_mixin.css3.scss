/*------------------------------------*\
    #CSS3 MIXINS
\*------------------------------------*/

/**
 * A collection Sass mixins for the most frequently used CSS3 features.
 *
 * Source: https://github.com/guardian/guss-css3
 */


/**
 * Box sizing
 */
@mixin box-sizing( $box ) {
    -webkit-box-sizing: $box;
       -moz-box-sizing: $box;
            box-sizing: $box;
}


/**
 * Background sizing
 */
@mixin background-size( $args... ) {
    -webkit-background-size: $args;
       -moz-background-size: $args;
            background-size: $args;
}


/**
 * Sticky positioning
 * Support is very limited but should be used in iOS
 * See: http://bit.ly/1hKglP6
 */
@mixin sticky {
    position: -webkit-sticky; // iOS 6+
    position: -moz-sticky;
    position: -ms-sticky;
    position: sticky;
}


/**
 * Prevent user from selecting text
 */
@mixin user-select {
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
}


/**
 * CSS Gradients
 *
 * Vertical linear gradient with a plain fallback for older browsers
 */
@mixin simple-gradient( $from, $to ) {

    // Fix for browsers not understanding transparent
    @if ( $from == transparent ) {
        $from: transparentize( $to, 1 );
    }

    @if ( $to == transparent ) {
        $to: transparentize( $from, 1 );
    }

    background-color: $from;
    background-image: -webkit-gradient( linear, 0% 0%, 0% 100%, from( $from ), to( $to ) );
    background-image: -webkit-linear-gradient( $from, $to );
    background-image: linear-gradient( to bottom, $from, $to );

}


/**
 * CSS Transition
 *
 * Do not use when transitionning prefixed properties to avoid impossible
 * code like `-moz-transition: -webkit-border-radius 1s`
 */
@mixin transition( $args... ) {
    -webkit-transition: $args;
       -moz-transition: $args;
            transition: $args;
}

@mixin transition-delay( $args... ) {
    -webkit-transition-delay: $args;
       -moz-transition-delay: $args;
            transition-delay: $args;
}


/**
 * CSS Transform
 */
@mixin transform( $args ) {
    -webkit-transform: $args;
       -moz-transform: $args;
        -ms-transform: $args;
         -o-transform: $args;
            transform: $args;
}

@mixin transform-origin( $args ) {
    -webkit-transform-origin: $args;
       -moz-transform-origin: $args;
        -ms-transform-origin: $args;
         -o-transform-origin: $args;
            transform-origin: $args;
}

@mixin rotate( $angle ) {
    @include transform( rotate( $angle ) );
}


/**
 * CSS Animations
 */
@mixin animation( $args ) {
    -webkit-animation: $args;
       -moz-animation: $args;
            animation: $args;
}

@mixin keyframes( $name ) {
    @-webkit-keyframes $name { @content; }
       @-moz-keyframes $name { @content; }
            @keyframes $name { @content; }
}


/**
 * Flexbox mixins
 */
@mixin flex( $flex-grow: 0, $flex-shrink: 1, $flex-basis: auto ) {
    -webkit-box-flex: $flex-grow;
       -moz-box-flex: $flex-grow;
        -webkit-flex: $flex-grow $flex-shrink $flex-basis;
            -ms-flex: $flex-grow $flex-shrink $flex-basis;
                flex: $flex-grow $flex-shrink $flex-basis;
}

@mixin flex-grow( $value: 0 ) {
    -webkit-flex-grow: $value;
     -webkit-box-flex: $value;
       -moz-flex-grow: $value;
    -ms-flex-positive: $value;
            flex-grow: $value;
}

@mixin flex-basis( $value: auto ) {
    -ms-flex-preferred-size: $value;
         -webkit-flex-basis: $value;
            -moz-flex-basis: $value;
                 flex-basis: $value;
}
